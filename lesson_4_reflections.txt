用git bash连接github并推送push本地文件
重要的一步是建立本地与github服务器的连接，步骤如下：
（1）获取密钥：ssh-keygen -t rsa -C "github user account email"，之后一直回车，会在本地生成id_rsa.pub文件，打开复制里面的密钥，粘贴到github的setting/ssh中，填在key部分。
（2）测试 ssh -T git@github.com
使用SSH，而不是HTTPS，不需要每次输入用户名和密码。

git remote
git remote add origin SSH...


何时使用远程版本库（直接在github上修改），而不是将所有工作保存在本地？
不想公开一些内容但又不想创建多个分支的时候？（瞎答的）


为何希望始终手动pull更改，而不是让git自动与远程版本库保持同步？
手动更改可以选择更改项，而自动同步不可选？（瞎答）

说明fork、克隆和分支间的不同。何时使用？
fork是github用户与用户之间，保留最原始用户的版本不被其他用户修改。
克隆是从github页面到本地电脑之间的拷贝。
分支是同一个路径内。


合并更改
当本地做了修改，而github上又有另一个合作者在github上对同一个文件提交了修改时，本地与github上的版本就出现了冲突。
本地修改前的版本在分支origin/master下，github和本地做修改后的版本在两个不同的master分支下。
做git pull之前，git log origin/master都只有本地未作修改前的log；
git pull origin = git fetch origin + git merge master origin/master二者的作用等同
这时会提示有冲突，不能自动合并，需要手动操作。待手动合并完后提交，再git push origin master

拥有远程分支的上次已知状态的副本（本地存储）有何好处？
可以只在本地做修改，保存历史信息，但不上传到远程分支？（瞎答）

11.14
如何在不使用Git或github的情况下开展协同？哪种方法更容易？哪种更难
在线的协同工具，有管理员和普通用户，管理员有所有的权限，普通用户限制权限对文件进行编辑修改。但不能同时在本地做修改后方便地对在线内容进行更新。

11.15
最原始分支 remote/origin/master
fork到自己主页的分支 origin/master
本地分支 master
git add remote 添加远程主机地址（最原始分支）为的是最原始分支更新后，本地能及时得到更新，见阮一峰的博客《Git远程操作详解》http://www.ruanyifeng.com/blog/2014/06/git_remote.html （如何设定远程主机；与远程主机保持一致更新git pull,git push）



=============================补充git远程操作==============================
1.git clone
从远程主机克隆一个版本库，在本地生成一个与远程主机版本库同名的目录。如果要制定目录名，可放在第二个参数，即git clone https/ssh <本地目录名>

2.git remote
列出所有远程主机，git remote -v可查看远程主机地址。当只有一台远程主机时，名字默认叫origin。
需要使用其他主机名（重命名），用git clone -o <别名> <主机地址> (在克隆时重命名主机名)
git remote show <主机名>查看主机详细信息
git remote add <主机名> <网址> 一般用于添加最原始版本的主机
git remote rm <主机名>删除
git remote rename <原名> <新名> (克隆后重命名)

3.git fetch
远程主机更新后，将更新取回本地（一般用于最原始的版本库有更新后，查看、取回更新）
git fetch <远程主机名> （默认取回所有分支更新）
git fetch <remote> <branch> 取回的更新要用“remote/master”读取。
git branch -r查看远程分支
git branch -a所有分支
git merge / git rebase本地分支合并远程分支 （git fetch + git merge相当于git pull）


4.git pull
取回远程主机某个分支的更新，再与本地指定分支合并
git pull <remote> <remote_branch>:<local_branch>
如果是与当前分支合并，则可省略冒号后面部分 如： git pull origin master
git clone时所有本地分支默认与远程主机同名分支建立追踪（tracking）关系，也可手动建立追踪关系：
git branch --set-upstream master origin/master 指定本地master分支追踪远程主机的origin/master分支。建立追踪关系后，git pull参数可省略远程分支名git  pull origin;如果没有其他分支，则可省略主机名git pull

5.git push
将本地分支更新，推送到远程主机
git push <remote> <local_branch>:<remote_branch>
git push origin master省略远程分支，表明本地分支与远程分支存在追踪关系。如果远程分支不存在，则会被新建（即在远程主机上建立与本地分支同名的分支）。
git push origin :master等于删除指定的远程分支，此处删除远程master分支。
如果当前分支与远程分支存在追踪关系，分支可省略(如果只有一个追踪分支，主机名可省略） git push 
git push -u origin master 将本地master推送到origin主机，且指定origin为默认主机，接下来的git push不加任何参数。


